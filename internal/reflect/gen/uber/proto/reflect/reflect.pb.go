// Code generated by protoc-gen-go. DO NOT EDIT.
// source: uber/proto/reflect/reflect.proto

package reflectpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PackageSet struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageSet) Reset()         { *m = PackageSet{} }
func (m *PackageSet) String() string { return proto.CompactTextString(m) }
func (*PackageSet) ProtoMessage()    {}
func (*PackageSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_reflect_676928d5c266b59c, []int{0}
}
func (m *PackageSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageSet.Unmarshal(m, b)
}
func (m *PackageSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageSet.Marshal(b, m, deterministic)
}
func (dst *PackageSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageSet.Merge(dst, src)
}
func (m *PackageSet) XXX_Size() int {
	return xxx_messageInfo_PackageSet.Size(m)
}
func (m *PackageSet) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageSet.DiscardUnknown(m)
}

var xxx_messageInfo_PackageSet proto.InternalMessageInfo

func init() {
	proto.RegisterType((*PackageSet)(nil), "uber.proto.reflect.PackageSet")
}

func init() {
	proto.RegisterFile("uber/proto/reflect/reflect.proto", fileDescriptor_reflect_676928d5c266b59c)
}

var fileDescriptor_reflect_676928d5c266b59c = []byte{
	// 102 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x28, 0x4d, 0x4a, 0x2d,
	0xd2, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x2f, 0x4a, 0x4d, 0xcb, 0x49, 0x4d, 0x2e, 0x81, 0xd1,
	0x7a, 0x60, 0x51, 0x21, 0x21, 0x90, 0x0a, 0x08, 0x5b, 0x0f, 0x2a, 0xa3, 0xc4, 0xc3, 0xc5, 0x15,
	0x90, 0x98, 0x9c, 0x9d, 0x98, 0x9e, 0x1a, 0x9c, 0x5a, 0xe2, 0x64, 0xcc, 0x25, 0x96, 0x9c, 0x9f,
	0xab, 0x87, 0xa9, 0xce, 0x89, 0x27, 0x08, 0xc2, 0x08, 0x00, 0x89, 0x06, 0x30, 0x46, 0x71, 0x42,
	0x25, 0x0a, 0x92, 0x92, 0xd8, 0xc0, 0x2a, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x3e,
	0xea, 0xcc, 0x81, 0x00, 0x00, 0x00,
}
